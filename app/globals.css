@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  height: 100vh;
  min-height: -webkit-fill-available;
}

.prose .anchor {
  @apply invisible absolute no-underline;

  margin-left: -0.8em;
  padding-right: 0.5em;
  width: 80%;
  max-width: 700px;
  cursor: pointer;
}

.anchor:hover {
  @apply visible;
}

.prose a {
  text-decoration-color: #374151;
  @apply decoration-[0.1em] underline-offset-2 transition-all dark:decoration-gray-300;
}

.prose .anchor:after {
  @apply text-neutral-300;
  content: "#";
}

.prose *:hover > .anchor {
  @apply visible;
}

pre {
  /* position: relative; */
  margin-top: 0 !important;
}

div[data-rehype-pretty-code-title] {
  /* background-color: #1f2937; */
  @apply bg-[#1f2937] dark:bg-[#0F141D];
  color: #fff;
  padding: 0.5em 1.14286em;
  border-radius: 0.375rem 0.375rem 0 0;
  transform: translateY(10px);
  font-size: 0.875rem;
  /* border-radius: 6px; */
  /* border-bottom: 1px solid;
  @apply border-b-gray-300; */
}

.prose :where(code):not(:where([class~="not-prose"] *))::before,
.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "";
}

code {
  @apply bg-gray-200 dark:bg-gray-600;
  padding: 0.125rem 0.25rem;
  border-radius: 0.25rem;
}

pre code {
  @apply bg-transparent !important;
}

.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"] *)
  )::before,
.prose
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"] *)
  )::after {
  content: "";
}
